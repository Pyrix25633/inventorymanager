generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model TempUser {
  username         String @id @db.VarChar(32)
  email            String @unique @db.VarChar(64)
  passwordHash     String @db.Char(60)
  verificationCode Int
}

model User {
  id              Int     @id @default(autoincrement())
  username        String  @unique @db.VarChar(32)
  email           String  @unique @db.VarChar(64)
  customization   Json
  passwordHash    String  @db.Char(60)
  token           String  @db.Char(128)
  sessionDuration Int     @default(14) @db.TinyInt
  tfaKey          String? @db.Char(52)

  locations       Location[]
  products        Product[]
  stocks          Stock[]
  categories      Category[]
  books           Book[]
}

model Location {
  id         Int    @id @default(autoincrement())
  user       User   @relation(fields: [userId], references: [id])
  userId     Int
  name       String @db.VarChar(32)

  @@unique([userId, name])

  products   Product[]
  categories Category[]
  books      Book[]
  stocks     Stock[]
}

enum UnitOfMeasurement {
  PIECES
  GRAMS
  MILLILITERS
}

model Product {
  id                       Int               @id @default(autoincrement())
  user                     User              @relation(fields: [userId], references: [id])
  userId                   Int
  name                     String            @db.VarChar(32)
  defaultQuantity          Int               @db.UnsignedSmallInt
  defaultUnitOfMeasurement UnitOfMeasurement
  defaultLocation          Location          @relation(fields: [defaultLocationId], references: [id])
  defaultLocationId        Int

  @@unique([userId, name])

  stocks                     Stock[]
}

model Stock {
  id                Int               @id @default(autoincrement())
  user              User              @relation(fields: [userId], references: [id])
  userId            Int
  expiration        DateTime          @db.Date
  product           Product           @relation(fields: [productId], references: [id])
  productId         Int
  quantity          Int               @db.UnsignedSmallInt
  location          Location          @relation(fields: [locationId], references: [id])
  locationId        Int
  unitOfMeasurement UnitOfMeasurement
}

model Category {
  id                Int      @id @default(autoincrement())
  user              User     @relation(fields: [userId], references: [id])
  userId            Int
  name              String   @db.VarChar(32)
  defaultLocation   Location @relation(fields: [defaultLocationId], references: [id])
  defaultLocationId Int

  @@unique([userId, name])

  books             Book[]
}

model Book {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  title      String   @db.VarChar(32)
  location   Location @relation(fields: [locationId], references: [id])
  locationId Int
}